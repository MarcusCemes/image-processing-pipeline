name: Node.js CI

on: [push, pull_request]

jobs:
  test:
    name: Test (Node.js v${{ matrix.node-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["14", "16", "18"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Setup Go
        uses: actions/setup-go@v3

      - name: Install dependencies
        run: pnpm install

      - name: Build vendor libraries
        run: pnpm build-vendor

      - name: Test project
        run: pnpm test -- --coverage

      - name: Build project
        run: pnpm build

      - name: Upload coverage
        if: matrix.node-version == '18'
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/coverage-final.json

  check:
    name: Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Check formatting
        run: pnpm test:format

      - name: Lint
        run: pnpm test:lint

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: "18"
          cache: pnpm

      - name: Setup Go
        uses: actions/setup-go@v3

      - name: Install dependencies
        run: pnpm install

      - name: Build vendor libraries
        run: pnpm build-vendor

      - name: Build project
        run: pnpm build

      - name: Publish to npm
        run: pnpm -r publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
